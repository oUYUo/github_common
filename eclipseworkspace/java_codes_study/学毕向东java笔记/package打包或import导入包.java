/*
package包
1，定义包：package 包名。
2，定义包必须出现在代码的第一行。
3，编译包： javac -d . 文件名.java
       -d ： 参数。
	   .  ： 将包存放在当前目录（可自行指定目录）。
	文件名： 就是类名。

4，运行包： java 包名.文件名

5，包与包之间进行访问，被访问的包中的类以及类中的成员，需要public修饰。
6，不同包支持继承，格式： class 类名 extends 包名.类名
7，不同包中的子类还可以直接访问父类protected权限修饰的成员。
8，包与包之间可以使用权限只有两种，public protected。
9，总结：
	    权限从大到小	public		protected		default		private
		同一个类中		  ok			ok				ok		  ok
		同一个包中		  ok			ok				ok
		不同包子类		  ok			ok
   		  不同包中		  ok
10，定义包多层次 package A.B.C.D    a文件夹中b文件夹中C文件夹中D文件夹中的class文件

-------------------------------------------------------------------------------------

import 导入包
1，import导入的是包
2，格式; import 包名.*;
3，导入后可直接使用类名。
4，通配符 * ， 将包中所有类导入。 ----> import 包名.*;
5，当导入不同包中存有同名文件，使用时，必须加包名。
6，包名命名规范：
		A）要求包名所有字母都要小写。
		B）包名一般情况下，是域名倒过来写：
			例：baidu.com ---> com.baodu.文件名;
		C）当包名出现“点 .”，那么每个”点“的前面字母代表一个文件夹名。
		D）出现多个“点”生成文件时，运行class文件还是依照“包名+文件名”。

7，当类型重名时，需要指定具体包名。
------------------------------------------------------------------------------------------------

import static 导入静态成员。
1，导入某类中所有静态成员。
2，当方法重名时，指定具备所属的对象或者类。
3，导入后，可直接调用，不再使用 类名.方法名。简化了书写格式
------------------------------------------------------------------------------------------------

protected保护权限
1，被protected所修饰的成员，包之间访问，必须建立继承关系。

*/