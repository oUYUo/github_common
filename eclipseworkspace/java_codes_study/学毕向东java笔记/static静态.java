/*
static 静态修饰符，用于修饰成员变量、成员函数。 
1，被static修饰后，除了可以被对象调用，还可以直接被类名调用。 类名.静态成员;
2，静态随着类的加在而加载，随着类的消失而消失。说明它的生命周期最长。
3，基于第二点，说明静态优先于对象的存在。
4，定义格式：static 数据类型 变量名;
			 static 返回值 函数名;
5，非静态方法即可以访问静态成员。也可以访问非静态成员。
6，所以静态方法中不可以定义this super关键字。也就是静态方法中，不可以出现非静态成员。
7，静态利弊：
		利处：对对象的共享数据进行单独空间的存储，节省空间。没有必要每个对象中都存储一份。
		弊处：生命周期过长。访问出现局限性（静态虽好，只能访问静态。）
8，当类创建对象无意义时，将构造函数私有化，这样无法创建对象。
*/