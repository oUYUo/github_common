/*
import java.net.*
1，网络模型：
	OSI参考模型：应用层、表示层、会话层、传输层、网络层、数据链路层、物理层
	TCP/IP参考模型：应用层、传输层、网际层、主机至网络层
2，网络通讯：
	IP地址：IP地址和主机名对应的，因为IP不易记。
	端口号：数字进行标识应用程序，为了方便称呼这个数字，叫做 端口，逻辑端口。
			有效端口：0~65535，其中0~1024系统使用或保留端口。
	传输协议：定义通信规则，这个通讯规则称为协议。国际通用协议：TCP/IP
		UDP协议：
			1，将数据及源和目的封装成数据包中，不需要建立连接【当A端下线，B端依旧可发数据，但此段数据丢失】
			2，每个数据报的大小限制在64K内。
			3，因无连接时，是不可靠协议。
			4，不需要建立连接，速度快。
			5，作用：如，在线互动视频。

		TCP协议：
			1，建立连接，形成传输数据通道。
			2，在连接中进行大数据量传输。
			3，通过三次互动完成连接，是可靠协议。【如电话响了】
			4，必须建立连接，效率会稍低。
			5，作用：如，下载。

2，Socket是为网络服务提供的一种机制。通信的两段都有Socket，网络通信其实就是Socker间的通信。数据在两个Socket间通过IO传输。

3，IP的段：192.168.1.255：在 1 中，1 - 244段 都能接受到来自 255段 所发出的信息。 0表示网络段

4，UDP传输概述：
	建立发送端，接收端。
	建立数据包。
	调用Socket的发送接受方法。
	关闭Socket。
	发送端与接收端是两个独立的运行程序。

5，TCP传输概述：
	建立客户端（Socket）和服务端（ServerSocket）
	建立连接后，通过Socket中的IO流进行数据的传输。
	关闭Socket
	客户端与服务端是两个独立的运行程序。

6，网络编程类的划分：
	1，IP/端口
		InetAddress：表示互联网协议(IP)地址。
		InetSocketAddress：是操作IP/端口。

	2，UDP传输：
		DatagramSocket：发送和接受数据包的插座（套接字）。
		DatagramPacket：发送或封装数据。

	3，TCP传输：
		Socket：客户端
		ServerSocket：服务端

	4，互联网操作（应用层）：
		URL：网址操作
		URLConnection：它代表应用程序和 URL 之间的通信链接

7，代表本机IP：127.0.0.1
*/